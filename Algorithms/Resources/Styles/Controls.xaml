<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Общие элементы -->
    
    <!--#region Разделитель-->
    <Style TargetType="GridSplitter">
        <Setter Property="Width" Value="3"/>
        <Setter Property="Background" 
                Value="{DynamicResource AccentColor}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=Inspector, 
                             Path=ActualWidth}" Value="0">
                <Setter Property="Background" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Скроллбар-->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="{DynamicResource CompColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Rectangle SnapsToDevicePixels="True"
                       Fill="{DynamicResource AccentColor}"/>
            <Track Name="PART_Track" IsDirectionReversed="True"
                   Margin="2,0,0,2">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" 
                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" 
                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Width" Value="10"/>
    </Style>
    <!--#endregion-->
    <!--#endregion-->
    
    <!--#region Элементы главной панели-->
    
    <!--#region Кнопка запуска-->
    <Style x:Key="PlayButton" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource PlayButtonColor}"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BtnBg" CornerRadius="50" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Path x:Name="BtnSymbol" StrokeThickness="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                              Fill="{TemplateBinding Foreground}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" 
                                    Value="{DynamicResource PlayButtonColor}"/>
                            <Setter TargetName="BtnSymbol" Property="Data" 
                                    Value="{DynamicResource PlaySymbol}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource PBPressedColor}"/>
                            <Setter TargetName="BtnSymbol" Property="Data" 
                                    Value="{DynamicResource PauseSymbol}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource PBMouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Кнопка перезагрузки-->
    <Style x:Key="RestartButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
        <Setter Property="Padding" Value="0.5,0,0,0"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource RestartButtonColor}"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BtnBg" CornerRadius="50" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Path Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center"
                              Fill="{TemplateBinding Foreground}"
                              Data="{DynamicResource RestartSymbol}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBg" Property="Background"
                                    Value="{DynamicResource RBMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBg" Property="Background" 
                                    Value="{DynamicResource RBPressedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Слайдер скорости -->
    <Style x:Key="SliderLeftField" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Height="4" CornerRadius="3,0,0,3"
                            Background="{DynamicResource AccentColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRightField" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Height="4" CornerRadius="0,3,3,0" 
                            Background="{DynamicResource AccentColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Border Width="25" Height="25" CornerRadius="100"
                                BorderThickness="2" BorderBrush="Black"
                                Background="{DynamicResource CompColor}">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Padding="0,-1,0,0" FontWeight="Bold" 
                                       FontSize="11" Foreground="{DynamicResource SecondaryTextColor}"
                                       Text="{Binding Algorithm.Speed}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="Slider" x:Key="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderLeftField}"
                                  Command="Slider.DecreaseLarge"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRightField}"
                                  Command="Slider.IncreaseLarge"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="SpeedSlider" TargetType="Slider">
        <Setter Property="Template" Value="{StaticResource Slider}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="10"/>
    </Style>
    <!--#endregion-->
    <!--#endregion-->
    
    <!--#region Элементы области просмотра -->
    
    <!--region View-->
    <Style x:Key="View" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ViewColor}"/>
    </Style>
    <!--#endregion-->

    <!--#region Блок с информацией-->
    <Style TargetType="TextBlock" x:Key="ViewInfo">
        <Setter Property="Foreground" 
                    Value="{DynamicResource PrimaryTextColor}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Список чисел-->
    <Style TargetType="ListBox" x:Key="NumberList">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <!--#endregion-->

    <!--#region Элементы списка чисел-->

    <!--#region Квадратный элемент-->
    <ControlTemplate TargetType="ListBoxItem" x:Key="NumberItemSquare">
        <Grid>
            <Rectangle x:Name="bg" Width="{TemplateBinding Width}"
                       Height="{TemplateBinding Height}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       StrokeThickness="{TemplateBinding BorderThickness}"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"/>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" 
                        Value="{DynamicResource NLI_Select_BGColor}"/>
                <Setter Property="BorderBrush" 
                        Value="{DynamicResource NLI_Select_BorderColor}"/>
                <Setter Property="Foreground" 
                        Value="{DynamicResource NLI_Select_FGColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" 
                        Value="{DynamicResource NLI_Disabled_BGColor}"/>
                <Setter Property="BorderBrush" 
                        Value="{DynamicResource NLI_Disabled_BorderColor}"/>
                <Setter Property="Foreground" 
                        Value="{DynamicResource NLI_Disabled_FGColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <Style TargetType="ListBoxItem" x:Key="NumberItem">
        <Setter Property="Template" Value="{DynamicResource NumberItemSquare}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="{DynamicResource NLI_BGColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NLI_BorderColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource NLI_FGColor}"/>
    </Style>
    <!--#endregion-->
    
    <!--#endregion-->

    <!--#region Компонент-->

    <!--#region Анимация навигации табом-->
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="FocusVisual" Opacity="0" 
                            Background="White"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="FocusVisual"
                                                TargetProperty="Opacity">
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Граница компонента-->
    <Style TargetType="Border" x:Key="ComponentBorder">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Background" 
                    Value="{DynamicResource MainColor}"/>
        <Setter Property="BorderBrush" 
                    Value="{DynamicResource AccentColor}"/>
    </Style>
    <!--#endregion-->

    <!--#region Заголовок-->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" 
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Polygon x:Name="arrow" Height="19" Width="19"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center" 
                                     Points="5,15,9,6,13,15" 
                                     Fill="{StaticResource AccentColor}"/>
                            <ContentPresenter Grid.Column="1" 
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="True" 
                                              Margin="4,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Points" TargetName="arrow" 
                                    Value="5,6,9,15,13,6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="arrow" 
                                    Value="{DynamicResource EffectColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" 
                                    Value="#222"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Expander-->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="0" SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          Content="{TemplateBinding Header}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          DockPanel.Dock="Top" Margin="1" 
                                          Padding="{TemplateBinding Padding}"
                                          FontStyle="{TemplateBinding FontStyle}" 
                                          FontStretch="{TemplateBinding FontStretch}" 
                                          FontWeight="{TemplateBinding FontWeight}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          FontSize="{TemplateBinding FontSize}" 
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                          Foreground="{TemplateBinding Foreground}" 
                                          Style="{StaticResource ExpanderDownHeaderStyle}"/>

                            <ContentPresenter x:Name="ExpandSite" 
                                              DockPanel.Dock="Bottom" 
                                              Focusable="false" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              Visibility="Collapsed"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" 
                                    TargetName="ExpandSite" 
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#111"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

</ResourceDictionary>
    